====================================
Redhat Enterprise Linux Installation
====================================

Installation instructions for building Chronicling America on RHEL 6.0. These
are a work in progress so there may be some rough bits marked w/ TODO. But 
they have resulted in a working install, so give them a shot and help us
tighten them up.

System Dependencies
===================

rpm -Uvh http://download.fedora.redhat.com/pub/epel/[YOUR-RHEL-VERSION]/x86_64/epel-release-6-5.noarch.rpm

yum install mercurial python26 python26-devel python26-mod_wsgi python-devel python-virtualenv mysql-server mysql-devel httpd java-1.6.0-openjdk-devel libxml2-devel libxslt-devel libjpeg-devel git gcc tomcat6 zlib-devel

Create Python Environment
=========================

hg clone http://loc-ndnp.hg.sourceforge.net:8000/hgroot/loc-ndnp/chronam
export CHRONAM_HOME=/opt/chronam
sudo mv chronam ${CHRONAM_HOME}
cd ${CHRONAM_HOME}

virtualenv [--python=/usr/bin/python26] --no-site-packages ${CHRONAM_HOME}
source ${CHRONAM_HOME}/bin/activate
pip install -r requirements.pip

--Note: You will need to use the --python option above if you're running RHEL
5.5

Create Database 
===============

echo "DROP DATABASE IF EXISTS chronam; CREATE DATABASE chronam CHARACTER SET
utf8; GRANT ALL ON chronam.* to 'chronam'@'localhost' identified by 'pick_one';
GRANT ALL ON test_chronam.* TO 'chronam'@'localhost' identified by 'pick_one';"
| mysql -u root -p

edit /etc/mysql/my.cnf so that max_allowed_packet = 16M

Solr Setup
==========

wget http://www.apache.org/dist//lucene/solr/1.4.1/apache-solr-1.4.1.tgz
tar xvfz apache-solr-1.4.1.tgz
sudo cp -R apache-solr-1.4.1/example/solr /opt
sudo cp apache-solr-1.4.1/dist/apache-solr-1.4.1.war /opt/solr
sudo mkdir /opt/solr/data
sudo chown tomcat:tomcat /opt/solr/data
sudo cp /opt/chronam/conf/schema.xml /opt/solr/conf/
sudo cp /opt/chronam/conf/solrconfig.xml /opt/solr/conf/

edit /opt/solr/conf/solrconfig.xml:
TODO: put the modified config in conf 
change path in <dataDir>[...]</dataDir> to: /opt/solr/data

create tomcat context fragment as: /etc/tomcat6/Catalina/localhost/solr.xml
TODO: put this fragement in a text file in chrona/conf

<?xml version="1.0" encoding="utf-8"?>
<Context docBase="/opt/solr/apache-solr-1.4.1.war" debug="0"
crossContext="true">
    <Environment name="solr/home" type="java.lang.String" value="/opt/solr/"
override="true"/>
</Context>

Setup Apache
============

cp /opt/chronam/conf/chronam.conf to /etc/httpd/conf.d/

edit /etc/httpd/conf.d/chronam.conf

add the line:

WSGISocketPrefix /opt/chronam/chronam
TODO: is this redhat only, or can we modify chronam.conf appropriately?

It's important to note that python26-mod_wsgi WILL NOT LOAD if either mod_wsgi
or mod_python is loaded. Make sure you've commented out any LoadModule?
statements that load either of those modules from your apache configuration, and
that you've Loaded python26-mod-wsgi.

mkdir ${CHRONAM_HOME}/static
mkdir ${CHRONAM_HOME}/.python-eggs
mkdir -p ${CHRONAM_HOME}/data/cache
chown apache:apache ${CHRONAM_HOME}/data/cache/
chown 

Configure Chronam
=================

# make configuration available to Python
echo "${CHRONAM_HOME}/conf" >
${CHRONAM_HOME}/lib/python2.6/site-packages/chronam.pth

cd ${CHRONAM_HOME}/data

hg clone http://loc-ndnp.hg.sourceforge.net:8000/hgroot/loc-ndnp/ndnp-essays
hg clone http://loc-ndnp.hg.sourceforge.net:8000/hgroot/loc-ndnp/chronam-loc memorious # for media files

mkdir batches # or symlink to where your batches are

django-admin.py syncdb --settings=chronam_settings --noinput --migrate

Restart Services
================

sudo /etc/init.d/mysql restart
sudo /etc/init.d/tomcat restart
sudo /etc/init.d/apache2 restart

Load Initial Data
=================

django-admin.py chronam_sync --settings=chronam_settings
