Instructions for building the chronam software stack on solaris10. 

These instructions are tailored to setting up the public1 environment.

These instructions also assume that batch data shares are available on the 
filesystem.  For example you'll want to make sure that the following locations 
have relevant data from the rdc in them:

  /ndnp/public1/data/batches   # rdc:/vol/ndnp/chronam/batches
  /ndnp/public1/data/bib       # rdc:/vol/ndnp/chronam/bib
  /ndnp/public1/data/essays    # rdc:/vol/ndnp_staging/batches/essays

- install sun studio (compilers)
  http://developers.sun.com/sunstudio/

- mkdir -p /ndnp/public1 /indexes/mysql/public1 /indexes/solr/public1
  chown `whoami`:ndnp /ndnp/public1 # avoid having to install as root

- set library path (not system wide)
  crle -c /ndnp/public1/ld.config -l /lib:/usr/lib:/ndnp/public1/j2k-3.18.2-solaris-x86-32/lib:/ndnp/public1/python2.7/lib:/ndnp/public1/mysql5/lib/mysql:/usr/ucblib
  export LD_CONFIG_32=/ndnp/public1/ld.config

- configure PATH (if doing public stack you may want these in /etc/profile)
  export PATH=/opt/SUNWspro/bin:/ndnp/public1/python2.7/bin:/usr/ccs/bin:/ndnp/public1/mysql5/bin:/usr/bin:/sbin:/usr/local/sbin:/usr/sbin:/opt/local/bin:/opt/csw/bin

- get chronam source code (for dev replace 'tags/{release_tag}' with 'trunk')

  cd /ndnp/public1
  hg clone https://rdc.lctl.gov/hg/chronam
  hg archive -q chronam_{release_tag}
  ln -s chronam_{release_tag} chronam

- build and install mysql5 
  download mysl5.1 source from http://dev.mysql.com/downloads/mysql/5.1.html#source
  gunzip mysql-5.1.50.tar.gz 
  tar xvf mysql-5.1.50.tar
  cd mysql-5.1.50
  ./configure --prefix=/ndnp/public1/mysql5 --enable-thread-safe-client --datadir=/indexes/mysql/public1 # --with-low-memory (if needed)
  make install
  cp /ndnp/public1/chronam/projects/chronam-public1/conf/my-public1.cnf /ndnp/public1/mysql5/my.cnf
  /ndnp/public1/mysql5/bin/mysql_install_db --datadir=/indexes/mysql/public1
  /ndnp/public1/chronam/projects/chronam-public1/scripts/mysql-public1 start
  /ndnp/public1/mysql5/bin/mysqladmin --socket=/tmp/mysql_public1.sock -u root -p password "pick_one"
  echo "CREATE DATABASE chronam CHARACTER SET utf8; GRANT ALL ON chronam.* to 'chronam'@'localhost' identified by 'pick_one';" | mysql --socket=/tmp/mysql_public1.sock -u root -p

- install python2.7
  wget http://www.python.org/ftp/python/2.7/Python-2.7.tgz
  gunzip Python-2.7.tgz
  tar xvf Python-2.7.tar
  cd Python-2.7
  ./configure --prefix=/ndnp/public1/python2.7 --enable-shared --with-solaris
  make install

- install distribute
  wget http://pypi.python.org/packages/source/d/distribute/distribute-0.6.14.tar.gz#md5=ac607e05682116c06383b27a15e2db90
  gunzip distribute-0.6.14.tar.gz 
  tar xvf distribute-0.6.14.tar
  cd distribute-0.6.14/
  python setup.py install

- install pip
  wget http://pypi.python.org/packages/source/p/pip/pip-0.8.tar.gz#md5=468d9adc309f33ad51cee38f0d455429
  gunzip pip-0.8.tar.gz
  tar xvf pip-0.8.tar
  cd pip-0.8
  python setup.py install

- install chronam requirements
  cd /ndnp/public1/chronam/projects/chronam-public1/
  LDFLAGS="-L/ndnp/public1/python2.6/lib -L/ndnp/public1/mysql5/lib/mysql" pip install -r requirements.pip

- install chronam-public1
  pip install -e .

- aware
  wget --no-check-certificate --http-user your-username --http-password your-password https://rdc.lctl.gov/svn/ndnp/third-party/j2k-3.18.2-solaris-x86-32.tar.gz
  gunzip j2k-3.18.2-solaris-x86-32.tar.gz 
  tar xvf j2k-3.18.2-solaris-x86-32.tar
  mv j2k-3.18.2-solaris-x86-32 /ndnp/public1/
  ln -s /ndnp/public1/j2k-3.18.2-solaris-x86-32/lib/libawj2k.so.2.0.1 /ndnp/public1/j2k-3.18.2-solaris-x86-32/lib/libawj2k.so

- build, configure and test chronam application
  cd /ndnp/public1/chronam/j2kmodule
  ln -s /ndnp/public1/j2k-3.18.2-solaris-x86-32/include include
  LDFLAGS='-L/ndnp/public1/python2.7/lib -L/ndnp/public1/j2k-3.18.2-solaris-x86-32/lib/' python setup.py install
  cp /ndnp/public1/chronam/projects/chronam-public1/conf/settings-public1.py /ndnp/public1/chronam/projects/chronam-public1/chronam/settings.py
  cd /ndnp/public1/chronam/projects/chronam-public1/chronam
  python manage.py syncdb --noinput
  python manage.py test

- solr
  wget http://www.apache.org/dist/lucene/solr/1.4.1/apache-solr-1.4.1.tgz
  gunzip apache-solr-1.4.1.tgz
  tar xvf apache-solr-1.4.1.tar
  mv apache-solr-1.4.1/example/ /ndnp/public1/solr-1.4.1
  cp /ndnp/public1/chronam/projects/chronam-public1/conf/schema.xml /ndnp/public1/solr-1.4.1/solr/conf/schema.xml
  cp /ndnp/public1/chronam/projects/chronam-public1/conf/solrconfig-public1.xml /ndnp/public1/solr-1.4.1/solr/conf/solrconfig.xml
  # verify that /ndnp/public1/solr-1.4.1/solr/conf/solrconfig.xml contains:
      "<dataDir>/indexes/solr/public1</dataDir>"

- apache
  wget http://apache.mirrors.tds.net/httpd/httpd-2.2.15.tar.gz
  gunzip httpd-2.2.15.tar.gz 
  tar xvf httpd-2.2.15.tar
  cd httpd-2.2.15
  ./configure --prefix=/ndnp/public1/apache2 --enable-mods-shared="cache disk_cache expires rewrite" --with-included-apr --with-mpm=worker
  make install
  cp /ndnp/public1/chronam/projects/chronam-public1/conf/httpd-public1.conf /ndnp/public1/apache2/conf/httpd.conf
  mkdir /indexes/cache/

  append the following two lines to the end of /ndnp/public1/apache2/bin/envvars

LD_CONFIG_32=/ndnp/public1/ld.config
export LD_CONFIG_32

- mod_wsgi
  wget http://modwsgi.googlecode.com/files/mod_wsgi-3.3.tar.gz
  gunzip mod_wsgi-3.3.tar.gz
  tar xvf mod_wsgi-3.3.tar
  cd mod_wsgi-3.3
  ./configure --with-apxs=/ndnp/public1/apache2/bin/apxs --with-python=/ndnp/public1/python2.7/bin/python
  make install
  mkdir /ndnp/public1/.python-eggs

- start services
  /ndnp/public1/chronam/projects/chronam-public1/scripts/mysql-public1 start
  /ndnp/public1/chronam/projects/chronam-public1/scripts/solr-public1 start
  /ndnp/public1/chronam/projects/chronam-public1/scripts/apache2-public1 start

- load the data
  cd /ndnp/public1/chronam/projects/chronam-public1/chronam

  # load titles and holdings
  python manage.py chronam_sync

  # start up one or more batch load processes to load all the batches
  python manage.py load_batches ../conf/batch_list &

  # or load a specific batch
  python manage.py load_batch batch_dlc_jamaica_ver01

  # To generate filename_of_batch_list from a batches directory:
  find /ndnp/public1/data/batches/* -name batch_* -print -prune | sed 's/\(.*\)\///g'

  # load up links to flickr using your flickr key
  python manage.py flickr YOUR_FLICKR_KEY
